(define (domain rover_domain)
	(:requirements :typing :hierachie)
	(:types
		waypoint - object
		mode - object
		store - object
		rover - object
		camera - object
		lander - object
		objective - object
	)
	(:predicates
		(at ?arg0 - rover ?arg1 - waypoint)
		(at_lander ?arg0 - lander ?arg1 - waypoint)
		(at_rock_sample ?arg0 - waypoint)
		(at_soil_sample ?arg0 - waypoint)
		(available ?arg0 - rover)
		(calibrated ?arg0 - camera ?arg1 - rover)
		(calibration_target ?arg0 - camera ?arg1 - objective)
		(can_traverse ?arg0 - rover ?arg1 - waypoint ?arg2 - waypoint)
		(channel_free ?arg0 - lander)
		(communicated_image_data ?arg0 - objective ?arg1 - mode)
		(communicated_rock_data ?arg0 - waypoint)
		(communicated_soil_data ?arg0 - waypoint)
		(empty ?arg0 - store)
		(equipped_for_imaging ?arg0 - rover)
		(equipped_for_rock_analysis ?arg0 - rover)
		(equipped_for_soil_analysis ?arg0 - rover)
		(full ?arg0 - store)
		(have_image ?arg0 - rover ?arg1 - objective ?arg2 - mode)
		(have_rock_analysis ?arg0 - rover ?arg1 - waypoint)
		(have_soil_analysis ?arg0 - rover ?arg1 - waypoint)
		(on_board ?arg0 - camera ?arg1 - rover)
		(store_of ?arg0 - store ?arg1 - rover)
		(supports ?arg0 - camera ?arg1 - mode)
		(visible ?arg0 - waypoint ?arg1 - waypoint)
		(visible_from ?arg0 - objective ?arg1 - waypoint)
		(visited ?arg0 - waypoint)
	)

	(:task calibrate_abs
		:parameters (?rover - rover ?camera - camera)
		:precondition ()
		:effect ()
	)

	(:task empty_store
		:parameters (?s - store ?rover - rover)
		:precondition ()
		:effect ()
	)

	(:task get_image_data
		:parameters (?objective - objective ?mode - mode)
		:precondition ()
		:effect ()
	)

	(:task get_rock_data
		:parameters (?waypoint - waypoint)
		:precondition ()
		:effect ()
	)

	(:task get_soil_data
		:parameters (?waypoint - waypoint)
		:precondition ()
		:effect ()
	)

	(:task navigate_abs
		:parameters (?rover - rover ?to - waypoint)
		:precondition ()
		:effect ()
	)

	(:task send_image_data
		:parameters (?rover - rover ?objective - objective ?mode - mode)
		:precondition ()
		:effect ()
	)

	(:task send_rock_data
		:parameters (?rover - rover ?waypoint - waypoint)
		:precondition ()
		:effect ()
	)

	(:task send_soil_data
		:parameters (?rover - rover ?waypoint - waypoint)
		:precondition ()
		:effect ()
	)

	(:method m_empty_store_1_ordering_0
		:parameters (?rover - rover ?s - store)
		:task (empty_store ?s ?rover)
		:precondition (and
			(empty ?s)
		)
		:subtasks (
		)
	)

	(:method m_empty_store_2_ordering_0
		:parameters (?rover - rover ?s - store)
		:task (empty_store ?s ?rover)
		:precondition (and
			(not (empty ?s))
		)
		:subtasks (and
		 (task0 (drop ?rover ?s))
		)
	)

	(:method m_navigate_abs_1_ordering_0
		:parameters (?from - waypoint ?rover - rover ?to - waypoint)
		:task (navigate_abs ?rover ?to)
		:precondition (and
			(at ?rover ?from)
		)
		:subtasks (and
		 (task0 (visit ?from))
		 (task1 (navigate ?rover ?from ?to))
		 (task2 (unvisit ?from))
		)
		:ordering (and
			(task0 < task1)
			(task1 < task2)
		)
	)

	(:method m_navigate_abs_2_ordering_0
		:parameters (?rover - rover ?to - waypoint)
		:task (navigate_abs ?rover ?to)
		:precondition (and
			(at ?rover ?to)
		)
		:subtasks (
		)
	)

	(:method m_navigate_abs_3_ordering_0
		:parameters (?from - waypoint ?rover - rover ?to - waypoint)
		:task (navigate_abs ?rover ?to)
		:precondition (and
			(and
				(not (at ?rover ?to))
				(can_traverse ?rover ?from ?to)
			)
		)
		:subtasks (and
		 (task0 (navigate ?rover ?from ?to))
		)
	)

	(:method m_navigate_abs_4_ordering_0
		:parameters (?from - waypoint ?mid - waypoint ?rover - rover ?to - waypoint)
		:task (navigate_abs ?rover ?to)
		:precondition (and
			(and
				(not (at ?rover ?to))
				(not (can_traverse ?rover ?from ?to))
				(can_traverse ?rover ?from ?mid)
				(not (visited ?mid))
			)
		)
		:subtasks (and
		 (task0 (navigate ?rover ?from ?mid))
		 (task1 (visit ?mid))
		 (task2 (navigate ?rover ?mid ?to))
		 (task3 (unvisit ?mid))
		)
		:ordering (and
			(task0 < task1)
			(task1 < task2)
			(task2 < task3)
		)
	)

	(:method m_send_soil_data_ordering_0
		:parameters (?l - lander ?rover - rover ?waypoint - waypoint ?x - waypoint ?y - waypoint)
		:task (send_soil_data ?rover ?waypoint)
		:precondition (and
			(and
				(at_lander ?l ?y)
				(visible ?x ?y)
			)
		)
		:subtasks (and
		 (task0 (navigate_abs ?rover ?x))
		 (task1 (communicate_soil_data ?rover ?l ?waypoint ?x ?y))
		)
		:ordering (and
			(task0 < task1)
		)
	)

	(:method m_get_soil_data_ordering_0
		:parameters (?rover - rover ?s - store ?waypoint - waypoint)
		:task (get_soil_data ?waypoint)
		:precondition (and
			(and
				(store_of ?s ?rover)
				(equipped_for_soil_analysis ?rover)
			)
		)
		:subtasks (and
		 (task0 (navigate_abs ?rover ?waypoint))
		 (task1 (empty_store ?s ?rover))
		 (task2 (sample_soil ?rover ?s ?waypoint))
		 (task3 (send_soil_data ?rover ?waypoint))
		)
		:ordering (and
			(task0 < task1)
			(task1 < task2)
			(task2 < task3)
		)
	)

	(:method m_send_rock_data_ordering_0
		:parameters (?l - lander ?rover - rover ?waypoint - waypoint ?x - waypoint ?y - waypoint)
		:task (send_rock_data ?rover ?waypoint)
		:precondition (and
			(and
				(at_lander ?l ?y)
				(visible ?x ?y)
			)
		)
		:subtasks (and
		 (task0 (navigate_abs ?rover ?x))
		 (task1 (communicate_rock_data ?rover ?l ?waypoint ?x ?y))
		)
		:ordering (and
			(task0 < task1)
		)
	)

	(:method m_get_rock_data_ordering_0
		:parameters (?rover - rover ?s - store ?waypoint - waypoint)
		:task (get_rock_data ?waypoint)
		:precondition (and
			(and
				(equipped_for_rock_analysis ?rover)
				(store_of ?s ?rover)
			)
		)
		:subtasks (and
		 (task0 (navigate_abs ?rover ?waypoint))
		 (task1 (empty_store ?s ?rover))
		 (task2 (sample_rock ?rover ?s ?waypoint))
		 (task3 (send_rock_data ?rover ?waypoint))
		)
		:ordering (and
			(task0 < task1)
			(task1 < task2)
			(task2 < task3)
		)
	)

	(:method m_send_image_data_ordering_0
		:parameters (?l - lander ?mode - mode ?objective - objective ?rover - rover ?x - waypoint ?y - waypoint)
		:task (send_image_data ?rover ?objective ?mode)
		:precondition (and
			(and
				(at_lander ?l ?y)
				(visible ?x ?y)
			)
		)
		:subtasks (and
		 (task0 (navigate_abs ?rover ?x))
		 (task1 (communicate_image_data ?rover ?l ?objective ?mode ?x ?y))
		)
		:ordering (and
			(task0 < task1)
		)
	)

	(:method m_get_image_data_ordering_0
		:parameters (?camera - camera ?mode - mode ?objective - objective ?rover - rover ?waypoint - waypoint)
		:task (get_image_data ?objective ?mode)
		:precondition (and
			(and
				(equipped_for_imaging ?rover)
				(on_board ?camera ?rover)
				(supports ?camera ?mode)
				(visible_from ?objective ?waypoint)
			)
		)
		:subtasks (and
		 (task0 (calibrate_abs ?rover ?camera))
		 (task1 (navigate_abs ?rover ?waypoint))
		 (task2 (take_image ?rover ?waypoint ?objective ?camera ?mode))
		 (task3 (send_image_data ?rover ?objective ?mode))
		)
		:ordering (and
			(task0 < task1)
			(task1 < task2)
			(task2 < task3)
		)
	)

	(:method m_calibrate_abs_ordering_0
		:parameters (?camera - camera ?objective - objective ?rover - rover ?waypoint - waypoint)
		:task (calibrate_abs ?rover ?camera)
		:precondition (and
			(and
				(calibration_target ?camera ?objective)
				(visible_from ?objective ?waypoint)
			)
		)
		:subtasks (and
		 (task0 (navigate_abs ?rover ?waypoint))
		 (task1 (calibrate ?rover ?camera ?objective ?waypoint))
		)
		:ordering (and
			(task0 < task1)
		)
	)

	(:action navigate
		:parameters (?x - rover ?y - waypoint ?z - waypoint)
		:precondition 
			(and
				(can_traverse ?x ?y ?z)
				(available ?x)
				(at ?x ?y)
				(visible ?y ?z)
			)
		:effect
			(and
				(not (at ?x ?y))
				(at ?x ?z)
			)
	)

	(:action sample_soil
		:parameters (?x - rover ?s - store ?p - waypoint)
		:precondition 
			(and
				(at ?x ?p)
				(at_soil_sample ?p)
				(equipped_for_soil_analysis ?x)
				(store_of ?s ?x)
				(empty ?s)
			)
		:effect
			(and
				(not (empty ?s))
				(not (at_soil_sample ?p))
				(full ?s)
				(have_soil_analysis ?x ?p)
			)
	)

	(:action sample_rock
		:parameters (?x - rover ?s - store ?p - waypoint)
		:precondition 
			(and
				(at_rock_sample ?p)
				(equipped_for_rock_analysis ?x)
				(store_of ?s ?x)
				(empty ?s)
			)
		:effect
			(and
				(not (empty ?s))
				(not (at_rock_sample ?p))
				(full ?s)
				(have_rock_analysis ?x ?p)
			)
	)

	(:action drop
		:parameters (?x - rover ?y - store)
		:precondition 
			(and
				(store_of ?y ?x)
				(full ?y)
			)
		:effect
			(and
				(not (full ?y))
				(empty ?y)
			)
	)

	(:action calibrate
		:parameters (?r - rover ?i - camera ?t - objective ?w - waypoint)
		:precondition 
			(and
				(equipped_for_imaging ?r)
				(calibration_target ?i ?t)
				(at ?r ?w)
				(visible_from ?t ?w)
				(on_board ?i ?r)
			)
		:effect
			(and
				(calibrated ?i ?r)
			)
	)

	(:action take_image
		:parameters (?r - rover ?p - waypoint ?o - objective ?i - camera ?m - mode)
		:precondition 
			(and
				(calibrated ?i ?r)
				(on_board ?i ?r)
				(equipped_for_imaging ?r)
				(supports ?i ?m)
				(visible_from ?o ?p)
				(at ?r ?p)
			)
		:effect
			(and
				(not (calibrated ?i ?r))
				(have_image ?r ?o ?m)
			)
	)

	(:action communicate_soil_data
		:parameters (?r - rover ?l - lander ?p - waypoint ?x - waypoint ?y - waypoint)
		:precondition 
			(and
				(at ?r ?x)
				(at_lander ?l ?y)
				(have_soil_analysis ?r ?p)
				(visible ?x ?y)
				(available ?r)
				(channel_free ?l)
			)
		:effect
			(and
				(not (available ?r))
				(not (channel_free ?l))
				(channel_free ?l)
				(communicated_soil_data ?p)
				(available ?r)
			)
	)

	(:action communicate_rock_data
		:parameters (?r - rover ?l - lander ?p - waypoint ?x - waypoint ?y - waypoint)
		:precondition 
			(and
				(at ?r ?x)
				(at_lander ?l ?y)
				(have_rock_analysis ?r ?p)
				(visible ?x ?y)
				(available ?r)
				(channel_free ?l)
			)
		:effect
			(and
				(not (available ?r))
				(not (channel_free ?l))
				(channel_free ?l)
				(communicated_rock_data ?p)
				(available ?r)
			)
	)

	(:action communicate_image_data
		:parameters (?r - rover ?l - lander ?o - objective ?m - mode ?x - waypoint ?y - waypoint)
		:precondition 
			(and
				(at ?r ?x)
				(at_lander ?l ?y)
				(have_image ?r ?o ?m)
				(visible ?x ?y)
				(available ?r)
				(channel_free ?l)
			)
		:effect
			(and
				(not (available ?r))
				(not (channel_free ?l))
				(channel_free ?l)
				(communicated_image_data ?o ?m)
				(available ?r)
			)
	)

	(:action visit
		:parameters (?waypoint - waypoint)
		:precondition ()
		:effect
			(and
				(visited ?waypoint)
			)
	)

	(:action unvisit
		:parameters (?waypoint - waypoint)
		:precondition ()
		:effect
			(and
				(not (visited ?waypoint))
			)
	)
)
